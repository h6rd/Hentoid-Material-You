// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.divider.MaterialDivider;
import com.skydoves.powerspinner.PowerSpinnerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox checkBox;

  @NonNull
  public final Guideline guidelineMiddle;

  @NonNull
  public final MaterialDivider horzDivider;

  @NonNull
  public final PowerSpinnerView locationSpin;

  @NonNull
  public final TextView locationTxt;

  @NonNull
  public final TextView searchFab;

  @NonNull
  public final RecyclerView searchTags;

  @NonNull
  public final Toolbar searchToolbar;

  @NonNull
  public final TextView startCaption;

  @NonNull
  public final TextView textCategoryAny;

  @NonNull
  public final TextView textCategoryArtist;

  @NonNull
  public final TextView textCategoryCharacter;

  @NonNull
  public final TextView textCategoryLanguage;

  @NonNull
  public final TextView textCategorySeries;

  @NonNull
  public final TextView textCategorySource;

  @NonNull
  public final TextView textCategoryTag;

  @NonNull
  public final PowerSpinnerView typeSpin;

  @NonNull
  public final TextView typeTxt;

  private ActivitySearchBinding(@NonNull ConstraintLayout rootView, @NonNull CheckBox checkBox,
      @NonNull Guideline guidelineMiddle, @NonNull MaterialDivider horzDivider,
      @NonNull PowerSpinnerView locationSpin, @NonNull TextView locationTxt,
      @NonNull TextView searchFab, @NonNull RecyclerView searchTags, @NonNull Toolbar searchToolbar,
      @NonNull TextView startCaption, @NonNull TextView textCategoryAny,
      @NonNull TextView textCategoryArtist, @NonNull TextView textCategoryCharacter,
      @NonNull TextView textCategoryLanguage, @NonNull TextView textCategorySeries,
      @NonNull TextView textCategorySource, @NonNull TextView textCategoryTag,
      @NonNull PowerSpinnerView typeSpin, @NonNull TextView typeTxt) {
    this.rootView = rootView;
    this.checkBox = checkBox;
    this.guidelineMiddle = guidelineMiddle;
    this.horzDivider = horzDivider;
    this.locationSpin = locationSpin;
    this.locationTxt = locationTxt;
    this.searchFab = searchFab;
    this.searchTags = searchTags;
    this.searchToolbar = searchToolbar;
    this.startCaption = startCaption;
    this.textCategoryAny = textCategoryAny;
    this.textCategoryArtist = textCategoryArtist;
    this.textCategoryCharacter = textCategoryCharacter;
    this.textCategoryLanguage = textCategoryLanguage;
    this.textCategorySeries = textCategorySeries;
    this.textCategorySource = textCategorySource;
    this.textCategoryTag = textCategoryTag;
    this.typeSpin = typeSpin;
    this.typeTxt = typeTxt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkBox;
      CheckBox checkBox = ViewBindings.findChildViewById(rootView, id);
      if (checkBox == null) {
        break missingId;
      }

      id = R.id.guideline_middle;
      Guideline guidelineMiddle = ViewBindings.findChildViewById(rootView, id);
      if (guidelineMiddle == null) {
        break missingId;
      }

      id = R.id.horz_divider;
      MaterialDivider horzDivider = ViewBindings.findChildViewById(rootView, id);
      if (horzDivider == null) {
        break missingId;
      }

      id = R.id.location_spin;
      PowerSpinnerView locationSpin = ViewBindings.findChildViewById(rootView, id);
      if (locationSpin == null) {
        break missingId;
      }

      id = R.id.location_txt;
      TextView locationTxt = ViewBindings.findChildViewById(rootView, id);
      if (locationTxt == null) {
        break missingId;
      }

      id = R.id.search_fab;
      TextView searchFab = ViewBindings.findChildViewById(rootView, id);
      if (searchFab == null) {
        break missingId;
      }

      id = R.id.search_tags;
      RecyclerView searchTags = ViewBindings.findChildViewById(rootView, id);
      if (searchTags == null) {
        break missingId;
      }

      id = R.id.search_toolbar;
      Toolbar searchToolbar = ViewBindings.findChildViewById(rootView, id);
      if (searchToolbar == null) {
        break missingId;
      }

      id = R.id.startCaption;
      TextView startCaption = ViewBindings.findChildViewById(rootView, id);
      if (startCaption == null) {
        break missingId;
      }

      id = R.id.textCategoryAny;
      TextView textCategoryAny = ViewBindings.findChildViewById(rootView, id);
      if (textCategoryAny == null) {
        break missingId;
      }

      id = R.id.textCategoryArtist;
      TextView textCategoryArtist = ViewBindings.findChildViewById(rootView, id);
      if (textCategoryArtist == null) {
        break missingId;
      }

      id = R.id.textCategoryCharacter;
      TextView textCategoryCharacter = ViewBindings.findChildViewById(rootView, id);
      if (textCategoryCharacter == null) {
        break missingId;
      }

      id = R.id.textCategoryLanguage;
      TextView textCategoryLanguage = ViewBindings.findChildViewById(rootView, id);
      if (textCategoryLanguage == null) {
        break missingId;
      }

      id = R.id.textCategorySeries;
      TextView textCategorySeries = ViewBindings.findChildViewById(rootView, id);
      if (textCategorySeries == null) {
        break missingId;
      }

      id = R.id.textCategorySource;
      TextView textCategorySource = ViewBindings.findChildViewById(rootView, id);
      if (textCategorySource == null) {
        break missingId;
      }

      id = R.id.textCategoryTag;
      TextView textCategoryTag = ViewBindings.findChildViewById(rootView, id);
      if (textCategoryTag == null) {
        break missingId;
      }

      id = R.id.type_spin;
      PowerSpinnerView typeSpin = ViewBindings.findChildViewById(rootView, id);
      if (typeSpin == null) {
        break missingId;
      }

      id = R.id.type_txt;
      TextView typeTxt = ViewBindings.findChildViewById(rootView, id);
      if (typeTxt == null) {
        break missingId;
      }

      return new ActivitySearchBinding((ConstraintLayout) rootView, checkBox, guidelineMiddle,
          horzDivider, locationSpin, locationTxt, searchFab, searchTags, searchToolbar,
          startCaption, textCategoryAny, textCategoryArtist, textCategoryCharacter,
          textCategoryLanguage, textCategorySeries, textCategorySource, textCategoryTag, typeSpin,
          typeTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
